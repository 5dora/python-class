3-3 특성 공학과 규제

다중 회귀 : 여러 개의 특성을 사용한 선형회귀

  특성이 2개일 경우, 
  타깃값과 함께 3차원 공간을 형성하고,
  선형회귀 방정식 : 타깃=a*특성1+b*특성2+절편


특성 공학(Feature Engineering)
  기존 특성을 이용하여 새로운 특성을 뽑아내는 작업
  사이킷런에서는 새로운 특성을 추가할 수 있는 도구를 제공.


데이터 준비
Pandas : 데이터 분석 라이브러리.
그중 데이터프레임(dataframe)은 핵심적인 데이터 구조.


판다스를 이용하여 CSV 파일 읽기 : 
1. 판다스의 read_csv()를 이용하여 CSV 파일을 읽어 낸 후,
2. 넘파이의 to_numpy()를 사용하여 넘파일 배열로 변환.

import pandas as pd

df = pd.read_csv('https://bit.ly/perch_csv_data')
perch_full = df.to_numpy()
print(perch_full)



넘파일 배열을 이용하여 타깃 데이터 준비.
import numpy as np

perch_weight = np.array(
    [5.9, 32.0, 40.0, 51.5, 70.0, 100.0, 78.0, 80.0, 85.0, 85.0, 
     110.0, 115.0, 125.0, 130.0, 120.0, 120.0, 130.0, 135.0, 110.0, 
     130.0, 150.0, 145.0, 150.0, 170.0, 225.0, 145.0, 188.0, 180.0, 
     197.0, 218.0, 300.0, 260.0, 265.0, 250.0, 250.0, 300.0, 320.0, 
     514.0, 556.0, 840.0, 685.0, 700.0, 700.0, 690.0, 900.0, 650.0, 
     820.0, 850.0, 900.0, 1015.0, 820.0, 1100.0, 1000.0, 1100.0, 
     1000.0, 1000.0]
     )



훈련 세트와 테스트 세트로 분리
from sklearn.model_selection import train_test_split

train_input, test_input, train_target, test_target = train_test_split(perch_full, perch_weight, random_state=42)



새로운 특성 추가 : 사이킷런의 변환기 기능을 활용
  사이킷런은 특성을 만들거나 전처리 하기 위한 다양항 클래스를 제공.
 변환기 클래스는 모두 fit(), transform() 을 제공

from sklearn.preprocessing import PolynomialFeatures

poly = PolynomialFeatures()
poly.fit([[2, 3]])
print(poly.transform([[2, 3]]))


poly = PolynomialFeatures(include_bias=False)
poly.fit([[2, 3]])
print(poly.transform([[2, 3]]))


poly = PolynomialFeatures(include_bias=False)

poly.fit(train_input)
train_poly = poly.transform(train_input)


print(train_poly.shape)
	

poly.get_feature_names_out()


test_poly = poly.transform(test_input)

